version: 2.1

orbs:
  node: circleci/node@6.1.0
  docker: circleci/docker@2.4.0

commands:
  install_dependencies:
    parameters:
      app-dir:
        type: string
    steps:
      - node/install-packages:
          pkg-manager: npm
          app-dir: << parameters.app-dir >>
          cache-path: << parameters.app-dir >>/node_modules
          override-ci-command: |
            npm ci
            npm install --save-dev jest-junit

  save_test_results:
    steps:
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

jobs:
  test-backend:
    docker:
      - image: cimg/node:20.17.0  # Updated to match your local version
        environment:
          NODE_ENV: test
          JEST_JUNIT_OUTPUT_DIR: ./test-results/backend
          JEST_JUNIT_OUTPUT_NAME: junit.xml
          JEST_JUNIT_CLASSNAME: "{filepath}"
          JEST_JUNIT_TITLE: "{title}"
      - image: cimg/postgres:14.1
        environment:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - install_dependencies:
          app-dir: server
      - run:
          name: Create test results directory
          command: mkdir -p test-results/backend
      - run:
          name: Run Backend Tests
          command: |
            cd server
            # Add jest-junit to your jest configuration
            if [ ! -f "jest.config.js" ]; then
              echo 'module.exports = {
                reporters: ["default", "jest-junit"],
                testEnvironment: "node",
                transform: {
                  "^.+\\.tsx?$": "ts-jest"
                }
              }' > jest.config.js
            else
              # If jest.config.js exists, append the reporter
              sed -i '/reporters/c\  reporters: ["default", "jest-junit"],' jest.config.js
            fi
            npm test
          environment:
            TEST_DB_HOST: localhost
            TEST_DB_NAME: test_db
            TEST_DB_USER: test_user
            TEST_DB_PASSWORD: test_password
            TEST_DB_PORT: 5432
      - save_test_results

  test-frontend:
    docker:
      - image: cimg/node:20.17.0
        environment:
          NODE_ENV: test
          JEST_JUNIT_OUTPUT_DIR: ./test-results/frontend
          JEST_JUNIT_OUTPUT_NAME: junit.xml
          JEST_JUNIT_CLASSNAME: "{filepath}"
          JEST_JUNIT_TITLE: "{title}"
    steps:
      - checkout
      - install_dependencies:
          app-dir: client
      - run:
          name: Create test results directory
          command: mkdir -p test-results/frontend
      - run:
          name: Run Frontend Tests
          command: |
            cd client
            if [ ! -f "jest.config.js" ]; then
              echo 'module.exports = {
                reporters: ["default", "jest-junit"],
                testEnvironment: "jsdom",
                transform: {
                  "^.+\\.tsx?$": "ts-jest"
                }
              }' > jest.config.js
            else
              # If jest.config.js exists, append the reporter
              sed -i '/reporters/c\  reporters: ["default", "jest-junit"],' jest.config.js
            fi
            npm test
      - save_test_results

  # ... rest of the config remains the same ...